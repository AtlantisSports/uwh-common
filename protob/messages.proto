syntax = "proto2";

/**
 * Mapping between wire identifiers (uint) and protobuf messages
 */
enum MessageType {
  MessageType_Ping = 1;
  MessageType_Pong = 2;
  MessageType_GameKeyFrame = 3;
  MessageType_Penalty = 4;
  MessageType_Goal = 5;
  MessageType_GameTime = 6;
}

message Ping {
  required uint32 Data = 1;
}

// Response to a Ping
message Pong {
  required uint32 Data = 1;
}

enum GameState {
  GameState_WallClock = 0;
  GameState_FirstHalf = 1;
  GameState_SecondHalf = 2;
  GameState_HalfTime = 3;
  GameState_GameOver = 4;
  GameState_PreGame = 5;
  GameState_OTFirst = 6;
  GameState_OTHalf = 7;
  GameState_OTSecond = 8;
  GameState_SuddenDeath = 9;
  GameState_PreOT = 10;
  GameState_PreSuddenDeath = 11;
}

enum TimeoutState {
  TimeoutState_None = 0;
  TimeoutState_RefTimeout = 1;
  TimeoutState_BlackTimeout = 2;
  TimeoutState_WhiteTimeout = 3;
  TimeoutState_PenaltyShot = 4;
}

enum PoolLayout {
  WhiteOnLeft = 0;
  WhiteOnRight = 1;
}

message Penalty {
  optional int32 PlayerNo = 1;
  optional uint32 StartTime = 2;
  optional int32 Duration = 3;
  optional int32 DurationRemaining = 4;
  optional bool IsWhite = 5;
}

message Goal {
  optional int32 GoalNo = 1;
  optional int32 PlayerNo = 2;
  optional bool IsWhite = 3;
  optional uint32 TimeLeft = 4;
  optional GameState Period = 5;
}

message GameTime {
  required uint32 TimeLeft = 1;
}

message GameKeyFrame {
  optional bool ClockRunning = 1;
  optional uint32 TimeLeft = 2;
  optional uint32 BlackScore = 3;
  optional uint32 WhiteScore = 4;
  optional GameState Period = 5;
  optional TimeoutState Timeout = 6;
  reserved 7; // repeated Penalty BlackPenalties = 7;
  reserved 8; // repeated Penalty WhitePenalties = 8;
  optional PoolLayout Layout = 9;
  optional int32 tid = 10;
  optional int32 gid = 11;
  optional uint32 TimeAtPause = 12;
}

